# 開発初期セットアップ
このドキュメントは、GitHubでリポジトリを作成し、ローカル環境でVue 3 + Vuetifyベースのプロジェクトを構築するまでの手順をまとめたものです。

---
## 1. GitHubでリポジトリを作成

1. GitHubにログイン
2. 右上の「＋」→「New repository」
3. 以下の設定で作成：

| 項目 | 内容 |
|------|------|
| Repository name | `paytrack-mini` |
| Description | ローン引引落し管理アプリ（就活用成果物） |
| Visibility | Public（成果物として見せる） |
| Initialize with README | ✅ チェック |
| Add .gitignore | Node を選択 |
| Add a license | MIT を選択 |

---

## 2. ローカルにクローン
```bash
cd プロジェクトフォルダ
git clone https://github.com/<your-username>/paytrack-mini.git
cd paytrack-mini
```
---
## 3. Vue 3 + Vuetify プロジェクトのセットアップ
```bash
npm create vite@latest paytrack-app --template vue-ts
# プロジェクト名：paytrack-app
# 以下のオプションを選択：
# - TypeScript ✅
# - Vue Router ✅
# - Pinia ✅
# - Vuetify ✅
```
```bash
cd paytrack-app
npm install
npm run dev
```
---
## 4. GitHubに初回コミットとプッシュ
```bash
git init
git remote add origin https://github.com/<your-username>/paytrack-mini.git
git add .
git commit -m "Initial Vue + Vuetify setup"
git push -u origin main

## 5. .gitignoreの追記
# 以下の行を追加して、不要なファイルを除外
```.gitignore
node_modules/
dist/
.env
.vscode/
.DS_Store
firebase-debug.log
```
--- 
## 6. Licenseの確認
- `LICENSE` ファイルを開き、MITライセンスの内容を確認

---

# vuetifyの導入
以下の手順でvuetifyを導入しました。
## 1. `vuetify v3`と`vite-plugin-vuetify`のインストール
```bash
npm install vuetify
npm install vite-plugin-vuetify
```
## 2. Viteプラグイン`vite.config.ts`の編集
```typescript
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import vuetify from 'vite-plugin-vuetify'

// https://vite.dev/config/
export default defineConfig({
  plugins: [
    vue(),
    vuetify({ autoImport: true }),
  ],
})
```

## 3. スタイルとコンポーネントのインポート
`main.ts`の編集。
```typescript
import { createApp } from 'vue'
import App from './App.vue'

// Vuetify関連のインポート
import './styles.scss'
import { createVuetify } from 'vuetify'
import * as components from 'vuetify/components'
import * as directives from 'vuetify/directives'

// アイコンフォントのインポート
import '@mdi/font/css/materialdesignicons.css' 

// Vuetifyインスタンス作成
const vuetify = createVuetify({
  components,
  directives,
  icons: {
    defaultSet: 'mdi',
},
})

// VueアプリにVuetifyを適用
createApp(App).use(vuetify).mount('#app')
```
vite.config.tsで`autoImport: true`を指定しているため、`components`と`directives`のインポートは不要かもしれませんが、念のため残しています。
```typescript
import { defineConfig } from 'vite'
import vue from '@vitejs/plugin-vue'
import vuetify from 'vite-plugin-vuetify'


// https://vite.dev/config/
export default defineConfig({
  plugins: [
    vue(),
    vuetify({ autoImport: true }),
  ],
})
```

### `src/styles.scss`の作成
`.node_modules/vuetify/styles`が展開されなかった（再インストール等したが）ため、代替として`.node_modules/vuetify/_styles.scss`をインポート
```scss
@use 'vuetify/styles';
```
### `tsconfig.json`の編集
{
  "files": [],
  "references": [
    { "path": "./tsconfig.app.json" },
    { "path": "./tsconfig.node.json" }
  ],
  "compilerOptions": {
    "types": ["vuetify"],
  }
}
---

## 4. 動作確認
`src/App.vue`に以下を追加し、Vuetifyコンポーネントが動作するか確認
```vue
<template>
  <v-alert type="success" text="success vuetify alert" />
</template>
```
---
